<?xml version="1.0"?>
<template
    format="5"
    revision="6"
    name="Traveloka V3 Page"
    description="Creates new page">

    <category value="Activity" />
    <formfactor value="Mobile"/>

    <parameter
        id="missionTeam"
        name="Mission Team"
        type="enum"
        default="none"
        help="The name of the activity class to create" >
        <option id="none">none</option>
        <option id="flight">flight</option>
        <option id="hotel">hotel</option>
        <option id="user">user</option>
        <option id="payment">payment</option>
        <option id="bell">bell</option>
        <option id="columbus">columbus</option>
        <option id="train">train</option>
    </parameter>

    <parameter
        id="nameFeature"
        name="Feature Name"
        constraints="nonempty"
        suggest="Testing"
        type="string"
        help="Name of the feature(will act as package), if you haven't created one, this will generate it also. ex like Reschedule, PriceAlert" />

    <parameter
        id="packName"
        name="package name"
        type="string"
        suggest="com.traveloka.android.mvp.${missionTeam?string}.${nameFeature?lower_case}"
        default="com.traveloka.android.mvp" />

    <parameter
        id="pageType"
        name="Type of Page"
        type="enum"
        default="activity"
        help="Choose the type of page you are developing, activity, dialog, or custom view">
        <option id="activity">activity</option>
        <option id="dialog">dialog</option>
        <option id="view">custom view</option>
    </parameter>

    <parameter
        id="pageName"
        name="Page Name"
        type="string"
        constraints="class|unique|nonempty"
        suggest="Login"
        help="Generated VM and presenter will use this name, ex name is Login, then vm is LoginViewModel" />

    <parameter
        id="vmClass"
        name="ViewModel Class"
        type="string"
        constraints="class|unique|nonempty"
        suggest="${pageName}ViewModel"
        help="By convention, should end with 'ViewModel'" />

    <parameter
        id="vmBindableAttr"
        name="ViewModel Bindable Attribute"
        type="string"
        constraints=""
        suggest="String name; String password"
        help="Will add bindable annotation, SEPARATE each attribute with '; ' ex String name; int x; View v" />

    <parameter
        id="vmNonBindableAttr"
        name="ViewModel Non Bindable Attribute"
        type="string"
        constraints=""
        suggest="boolean isNonBindable; boolean isOkay"
        help="SEPARATE each attribute with '; ' ex String name; int x; View v" />

    <parameter
        id="pClass"
        name="Presenter Class Name"
        type="string"
        constraints="class|unique|nonempty"
        suggest="${pageName}Presenter"/>

    <parameter
        id="iExtract"
        name="Extract Interface?"
        type="boolean"
        default="false"
        help="If checked, presenter can be referenced as implementation, if not checked will let presenter to be accessed directly" />

    <parameter
        id="iClass"
        name="Interface Name"
        type="string"
        suggest="${pClass}Contract"
        visibility="iExtract"
        help="Interface name, or as known as contract in previous architecture"/>

    <parameter
        id="iMethod"
        name="Interface method(s)"
        type="string"
        suggest="void doLogin(); String getLoggedUser(); boolean doLogOut()"
        help="Optional method, separate by ';' ex: void doLogin(); String getLoggedUser(); boolean doLogOut()"/>

    <parameter
        id="coreComponent"
        name="Override default-toolbar-only core component implementation"
        type="boolean"
        default="false"
        help="If checked, you can generate code for core component implementation, like custom appbar behavior" />

    <parameter
        id="coreToolbar"
        name="Toolbar"
        type="enum"
        default="use"
        help="What implementation for toolbar, just change the declaration for more complete action of Toolbar"
        visibility="coreComponent">
        <option id="use">Use default toolbar</option>
        <option id="nouse">Do not use toolbar</option>
        <option id="collapsing">Toolbar inside collapsing toolbar</option>
    </parameter>

    <parameter
        id="coreFAB"
        name="FAB"
        type="enum"
        default="nouse"
        help="What implementation for FAB, just change the declaration for more complete action of FAB"
        visibility="coreComponent">
        <option id="use">Use default FAB (bottom, right)</option>
        <option id="nouse">Do not use FAB</option>
        <option id="appbar">FAB anchored to appbar</option>
    </parameter>

    <parameter
        id="coreTab"
        name="TabLayout"
        type="enum"
        default="nouse"
        help="What implementation for TabLayout, just change the declaration for more complete action of TabLayout"
        visibility="coreComponent">
        <option id="use">Use default TAB</option>
        <option id="nouse">Do not use TAB</option>
    </parameter>
    <!-- 128x128 thumbnails relative to template.xml -->
    <globals file="globals.xml.ftl" />
    <execute file="recipe.xml.ftl" />

</template>
